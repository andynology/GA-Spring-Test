# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
- name: Deploy to App Engine
  # You may pin to the exact commit or the version.
  # uses: google-github-actions/deploy-appengine@e3009e47609565a194033fbac6b6df2fd71fb6bf
  uses: google-github-actions/deploy-appengine@v0.4.0
  with:
    # The GCP project ID. Overrides project ID set by credentials.
    project_id: 
    # The path to set the working directory. The deliverables will be referenced
from this path.
    working_directory: # optional
    # The yaml files for the services or configurations you want to deploy.
If not given, defaults to app.yaml in the current directory. If that is
not found, attempts to automatically generate necessary configuration
files (such as app.yaml) in the current directory.
    deliverables: # optional
    # Deploy with a specific container image. The image URL must be from one of
the valid GCR host names.
    image_url: # optional
    # The version of the app that will be created or replaced by this
deployment. If you do not specify a version, one will be generated for
you.
    version: # optional
    # Promote the deployed version to receive all traffic.
    promote: # optional, default is true
    # Service account key to use for authentication. This should be the JSON
formatted private key which can be exported from the Cloud Console. The
value can be raw or base64-encoded.
    credentials: # optional
    # Space separated list of other App Engine flags, examples can be found:
https://cloud.google.com/sdk/gcloud/reference/app/deploy#FLAGS. Ex 
--service-account=my-account@project.iam.gserviceaccount.com --no-cache
    flags: # optional
